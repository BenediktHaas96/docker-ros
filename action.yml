# action.yml
name: 'Hello World'
description: 'Greet someone'
# TODO: move env (not supported) to inputs?
env:
  ROS_DIR: .
  DOCKER_DIR: docker
inputs:
  token:
    description: 'access token for cloning docker-ros'
    required: true
    default: ''
  docker-registry: # TODO: infer from image name
    description: 'docker registry'
    required: false
    default: ghcr.io
  docker-registry-username:
    description: 'docker registry username'
    required: false
    default: ${{ github.actor }}
  docker-registry-password:
    description: 'docker registry username'
    required: false
    default: ${{ github.token }}
  base-image:
    description: 'base image'
    required: true
  dev-image:
    description: 'dev image'
    required: false
    default: ghcr.io/${{ github.repository }}:latest-dev
  run-image:
    description: 'run image'
    required: false
    default: ghcr.io/${{ github.repository }}:latest
  command:
    description: 'command'
    required: true
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:

    - id: slugify-ref-name
      uses: gacts/github-slug@v1
      with:
        to-slug: ${{ github.ref_name }}

    - name: checkout code 
      uses: actions/checkout@v3

    - name: docker login
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.docker-registry }}
        username: ${{ inputs.docker-registry-username }}
        password: ${{ inputs.docker-registry-password }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: setup docker buildx
      uses: docker/setup-buildx-action@v2

    - name: checkout docker-ros 
      uses: actions/checkout@v3
      with:
        repository: ika-rwth-aachen/docker-ros
        ref: feature/github-action # TODO: desired behavior?
        token: ${{ inputs.token }}
        path: ${{ env.DOCKER_DIR }}/docker-ros

    - name: docker build
      run: |
            cd ${ROS_DIR}
            ${GITHUB_WORKSPACE}/${DOCKER_DIR}/docker-ros/ci.sh
      shell: bash
      env:
        PLATFORM: amd64
        TARGET: dev,run
        BASE_IMAGE: ${{ inputs.base-image }}
        COMMAND: ${{ inputs.command }} # TODO: command not needed for dev image
        IMAGE: ${{ inputs.run-image }}_${{ steps.slugify-ref-name.outputs.slug }}
        DEV_IMAGE: ${{ inputs.dev-image }}_${{ steps.slugify-ref-name.outputs.slug }}

    - name: industrial ci
      uses: ros-industrial/industrial_ci@master
      env:
        UPSTREAM_WORKSPACE: ${{ env.ROS_DIR }}/.repos
        TARGET_WORKSPACE: ${{ env.ROS_DIR }}
        ADDITIONAL_DEBS: git # TODO AFTER_INIT_EMBED: git config --global url.${CI_SERVER_PROTOCOL}://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}.insteadOf ${CI_SERVER_URL}
        DOCKER_RUN_OPTS: -u root:root
        DOCKER_IMAGE: ${{ inputs.dev-image }}_${{ steps.slugify-ref-name.outputs.slug }}_ci
