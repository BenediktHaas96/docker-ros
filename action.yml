name: "docker-ros"
description: "docker-ros automatically builds development and deployment Docker images for your ROS-based repositories."

inputs:

  token: # TODO: remove, once repos are public
    description: 'access token for cloning docker-ros'
    required: true
    default: ''

  target:
    description: "Target stage of Dockerfile (comma-separated list) [dev|run]"
    default: "run"
  
  platform:
    description: "Target platform architecture (comma-separated list) [amd64|arm64|...]"
  
  base-image:
    description: "Base image name:tag"
    required: true
  
  command:
    description: "Launch command of run image (required if target=run)"
  
  image:
    description: "Image name:tag of run image"
    default: ghcr.io/${{ github.repository }}:latest

  dev-image:
    description: "Image name:tag of dev image"

  build-context:
    description: "Build context of Docker build process"
    default: ${{ github.workspace }}

  registry: # TODO: infer from image name
    description: "Docker registry to push images to"
    default: ghcr.io

  registry-username:
    description: "Docker registry username"
    default: ${{ github.actor }}

  registry-password:
    description: "Docker registry password"
    default: ${{ github.token }}

  enable-industrial-ci:
    description: "Enable industrial_ci"
    default: "false"


runs:
  using: "composite"
  steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Checkout docker-ros
      uses: actions/checkout@v3
      with:
        repository: ika-rwth-aachen/docker-ros
        ref: feature/github-action # TODO: desired behavior?
        token: ${{ inputs.token }}
        path: ${{ inputs.build-context }}/docker/docker-ros

    - name: Set up QEMU for architecture emulation
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}

    - name: Build images
      id: build-images
      working-directory: ${{ inputs.build-context }}
      run: docker/docker-ros/ci.sh
      shell: bash
      env:
        PLATFORM: ${{ inputs.platform }}
        TARGET: ${{ inputs.target }}
        BASE_IMAGE: ${{ inputs.base-image }}
        COMMAND: ${{ inputs.command }}
        IMAGE: ${{ inputs.image }}
        DEV_IMAGE: ${{ inputs.dev-image }}

    - name: Run industrial_ci
      uses: ros-industrial/industrial_ci@master
      if: ${{ inputs.enable-industrial-ci == 'true' }}
      env:
        UPSTREAM_WORKSPACE: ${{ env.ROS_DIR }}/.repos
        TARGET_WORKSPACE: ${{ inputs.build-context }}
        ADDITIONAL_DEBS: git # TODO AFTER_INIT_EMBED: git config --global url.${CI_SERVER_PROTOCOL}://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}.insteadOf ${CI_SERVER_URL}
        DOCKER_RUN_OPTS: -u root:root
        DOCKER_IMAGE: ${{ steps.build-images.outputs.INDUSTRIAL_CI_IMAGE }}
